generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  entityId      String?
  accounts      Account[]
  sessions      Session[]
  entity        Entity?   @relation(fields: [entityId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Entity {
  id          String        @id @default(cuid())
  type        Int
  merchants   Merchant[]
  Institution Institution[]
  individuals Individual[]
  User        User[]
}

model Merchant {
  id                      String   @id @default(cuid())
  entityId                String
  registeredName          String
  registeredCompanyNumber String
  bankVerificationNumber  Int
  operationalAddressId    String
  utilityBillId           String
  entity                  Entity   @relation(fields: [entityId], references: [id])
  operationAddress        Address  @relation(fields: [operationalAddressId], references: [id])
  utilityBill             Document @relation(fields: [utilityBillId], references: [id])
}

model Institution {
  id                      String   @id @default(cuid())
  entityId                String
  registeredName          String
  registeredCompanyNumber String
  headName                String
  headEmail               String
  bankVerificationNumber  Int
  operationalAddressId    String
  utilityBillId           String
  entity                  Entity   @relation(fields: [entityId], references: [id])
  operationAddress        Address  @relation(fields: [operationalAddressId], references: [id])
  utilityBill             Document @relation(fields: [utilityBillId], references: [id])
}

model Individual {
  id                     String   @id @default(cuid())
  entityId               String
  name                   String
  bankVerificationNumber Int
  operationalAddressId   String
  utilityBillId          String
  entity                 Entity   @relation(fields: [entityId], references: [id])
  operationAddress       Address  @relation(fields: [operationalAddressId], references: [id])
  utilityBill            Document @relation(fields: [utilityBillId], references: [id])
}

model Address {
  id          String        @id @default(cuid())
  street      String
  houseNumber String
  zipCode     String
  city        String
  state       String
  Merchant    Merchant[]
  Institution Institution[]
  Individual  Individual[]
}

model Document {
  id          String        @id @default(cuid())
  name        String
  contentType String
  sizeInMb    Int
  publicUrl   String
  Merchant    Merchant[]
  Institution Institution[]
  Individual  Individual[]
}

model Deal {
  id                 String   @id @default(cuid())
  name               String
  description        String
  reference          String
  amount             Int
  startDate          DateTime
  endDate            DateTime
  requestedAmount    Int
  returnOnInvestment Int
  carryPercentage    Int
}
